name: Publish

on:
  push:
    tags:
      - "**"
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.artifacts.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: 18.14.2
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@v3
        if: success()
        with:
          name: latest
          path: dist
      - name: Collect artifacts
        if: success()
        id: artifacts
        run: |
          echo "matrix=$(ls dist | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  publish:
    name: Publish
    needs: build
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.build.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: 18.14.2
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v3
        with:
          name: latest
          path: dist
      - name: Configure git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Configure npm
        run: npm config set //registry.npmjs.org/:_authToken ${{secrets.WCP_NPM_TOKEN}}
      - name: Publish package
        working-directory: dist/${{matrix.dir}}
        run: npx release-it --no-git --no-github.release --no-increment --ci
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NODE_AUTH_TOKEN: ${{secrets.WCP_NPM_TOKEN}}
